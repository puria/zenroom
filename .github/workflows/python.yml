name: Build and upload nightly to PyPI

on:
  push:
    paths-ignore:
    - 'docs/**'
    - 'examples/**'
    - '*.md'

jobs:
  python-test:
    name: Run unit tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: bindings/python3

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'
      - run: apt-get update && apt-get install -y cmake vim zsh
      - run: pip install -e .[test]
      - run: pytets -s tests

  build_wheels:
    needs: [python-test]
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-10.15]

    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Build wheels
        run: |
          date +%s > current_time
          # Remove shared library
          rm bindings/golang/zenroom/lib/libzenroomgo.so
          cp bindings/python3/setup.py .
          pip install cibuildwheel
          cibuildwheel --output-dir wheelhouse
        env:
          # configure cibuildwheel to build native archs ('auto'), and some
          # emulated ones
          CIBW_ARCHS_LINUX: auto aarch64
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_24
          CIBW_MANYLINUX_I686_IMAGE: manylinux_2_24
          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux_2_24
          # Skip building on Python 2.7, Python 3.5 and PyPy on all platforms
          CIBW_SKIP: cp27-* cp35-* pp*
          CIBW_BEFORE_BUILD_LINUX: apt-get update && apt-get install -y cmake vim zsh
          CIBW_BEFORE_BUILD_MACOS: brew install cmake vim zsh

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  upload_pypi:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
